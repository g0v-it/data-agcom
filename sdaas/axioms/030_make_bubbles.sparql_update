#
# Create bubbles AGCOM observations 
#
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> 
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX interval: <http://reference.data.gov.uk/def/intervals/>
PREFIX time: <http://www.w3.org/2006/time#>
PREFIX qb: <http://purl.org/linked-data/cube#>
PREFIX bgo: <http://linkeddata.center/lodmap-bgo/v1#>
PREFIX agcom: <https://g0v-it.github.io/ontologies/agcom#>
PREFIX resource: <http://agcom.linkeddata.cloud/resource/>
PREFIX scovo: <http://purl.org/NET/scovo#>
PREFIX local: <urn:local:agicom:>


#
# AXIOM: find the last dataset and use it to create bubble graph (i.e. Accounts)
#
INSERT { ?bgo dct:source ?ds }
WHERE {
	{
		SELECT ?ds ?refPeriod {
			?ds a qb:DataSet ;
  				qb:structure agcom:rilevazioni_pluralismo ;
  				agcom:refPeriod ?refPeriod .
			?refPeriod time:hasEnd/time:inXSDDateTime ?endDate.
		} ORDER BY DESC(?endDate) LIMIT 1
	}
	
	?bgo a bgo:BubbleGraph .

	FILTER NOT EXISTS {?bgo dct:source [] }
}

;

#
# AXIOM generate the default bubble graph title
# 
INSERT { ?bgo dct:title ?title }
WHERE {
	?bgo a bgo:BubbleGraph; dct:source/agcom:refPeriod ?refPeriod .
	?refPeriod scovo:max ?to ; scovo:min ?from .
	
	BIND( STRLANG(CONCAT("Visibilità della politica in TV dal ", STR(?from), " al ", STR(?to)), "it") AS ?title )  
	FILTER NOT EXISTS {?bgo ?title [] }
}

;

#
# AXIOM: add acc
#
INSERT { 
   ?bubbleUri a bgo:Account ;
		bgo:inBubbleGraph ?bgo ;
		bgo:code ?code ;
		dct:title ?title ;
		dct:subject ?description ;
		dct:source ?observation ;
		bgo:amount ?impressions ;
		bgo:version ?version ;
        bgo:background ?background ;
		bgo:partitionLabel 
			?subjectLabel,
			?roleLabel, 
			?labelEmittente,
			?labelEditore
} 
WHERE {

	?bgo a bgo:BubbleGraph ; dct:source ?ds .
  	?ds a qb:DataSet ;
  		qb:structure agcom:rilevazioni_pluralismo ;
  		agcom:refPeriod/time:hasEnd/time:inXSDDateTime ?endDate.
  
  	BIND( STRBEFORE(STR(?endDate),"T") AS ?version)
   	

	?observation a qb:Observation ;
		qb:dataSet ?ds ;
		agcom:subject ?subject ;
		agcom:role ?role ;
		agcom:context ?context ;
		local:nst ?nst;
		local:bwi ?bwi;
	.
	
	# Calcolo impressions
	BIND( (?nst * ?bwi / 5  )  AS ?impressions)
  	
	?subject skos:prefLabel ?subjectLabel .
	?role skos:prefLabel ?roleLabel .
	?context skos:prefLabel ?contextLabel .
	
	# Il titolo della bolla è la prefLabel del soggetto della rilevazione e il suo ruolo.
	BIND( CONCAT(?subjectLabel," (",?roleLabel,")") AS ?title)
	
	# Il subject  la prefLabel del contesto 
	BIND( CONCAT(?contextLabel, " - ", ?version) AS ?description)
	
	# Il background è l'immagine del politico che parla (se c'e')
	OPTIONAL { ?subject foaf:img ?background } 
	
	
	# Il soggetto individuale TV è la prima partizione
	# Il ruolo è la seconda partizione	
	# L'emittente del programma è la terza partizione
	?context skos:related ?emittente .
	?emittente skos:inScheme resource:emittenti;
		skos:prefLabel ?labelEmittente . 
	
	# L'editore  della missiome è la quarta partizione
	?emittente skos:related ?editore .
	?editore skos:inScheme resource:editori;
  		skos:prefLabel ?labelEditore.
  
  
	BIND( MD5(STR(?observation)) AS ?code)	
	BIND( IRI( CONCAT("https://data.agcom.g0v.it/ldp/account/",?code,"#data")) AS ?bubbleUri)
}

;


#
#  Create comments
#
INSERT { ?bubbleUri dct:description ?description} 
WHERE {
	?bubbleUri a bgo:Account ; dct:source/rdfs:comment ?description .
	FILTER NOT EXISTS { ?bubbleUri dct:description [] }
}

