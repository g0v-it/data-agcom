#!/usr/bin/env bash
set -a

GRAPH="http://agcom.linkeddata.cloud/resource/"

# Generate data from test file
php gateways/tests/build_agcom.php < gateways/tests/data/agcom-test.csv > data/2019_02_agcom.ttl


####################################################
SD_LOG  "Start learning window..."
####################################################
SD_LEARN urn:sdaas:config "data/kees.ttl"
SD_LEARN "${GRAPH}g0v_app_graph" "data/g0v_app.ttl"

SD_LEARN http://reference.data.gov.uk/id/gregorian-year/2018
SD_LEARN http://reference.data.gov.uk/id/quarter/2019-Q1
SD_LEARN "${GRAPH}auditel_resources_graph" data/auditel_resources.ttl
SD_LEARN "${GRAPH}190412_TG_ITrim2019_graph" data/190412_TG_ITrim2019.ttl

SD_LEARN http://g0v-it.github.io/ontologies/agcom https://g0v-it.github.io/ontologies/agcom/v1.ttl
SD_LEARN http://g0v-it.github.io/ontologies/auditel https://g0v-it.github.io/ontologies/auditel/v1.ttl

SD_LEARN "${GRAPH}agcom_resources_graph" "data/agcom_resources.ttl"

function LOAD_AGICOM_DATA {
	local source="$1"
	local from="$2"
	local to="$3"
	
	start_ts=$(date -d "$from" '+%s')
	end_ts=$(date -d "$to" '+%s')	
	dayPeriod=$(( ( end_ts - start_ts )/86400 + 1 ))
	interval="${from}T00:00:00/P${dayPeriod}D"
	
	local period="http://reference.data.gov.uk/id/gregorian-interval/$interval"

	SD_LEARN "${period}"
	SD_LEARN "$source" "$source" "php gateways/agcom.php ${source}#${interval}|in|out|.ttl|"
}
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/14239063/Dati+monitoraggio+13-03-2019" 2019-02-01 2019-02-28
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/14509260/Dati+monitoraggio+03-04-2019" 2019-03-25 2019-03-31
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/14509260/Dati+monitoraggio+10-04-2019" 2019-04-01 2019-04-07
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/14509260/Dati+monitoraggio+24-04-2019" 2019-04-08 2019-04-21
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/14509260/Dati+monitoraggio+30-04-2019" 2019-04-22 2019-04-28
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/14552640/Dati+monitoraggio+07-05-2019" 2019-04-29 2019-05-05
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/14552640/Dati+monitoraggio+21-05-2019" 2019-05-13 2019-05-19
LOAD_AGICOM_DATA "https://www.agcom.it/documents/10179/15205401/Dati+monitoraggio+05-06-2019" 2019-05-20 2019-05-24


####################################################
SD_LOG  "Linking data... "
####################################################
SD_SPARQL_UPDATE @linked_data/import_from_manual_links.sparql_update
SD_SPARQL_UPDATE @linked_data/import_parties_from_wikidata.sparql_update
SD_SPARQL_UPDATE @linked_data/import_politicians_from_wikidata.sparql_update
SD_SPARQL_UPDATE @linked_data/import_tv_channels_from_wikidata.sparql_update

SD_SPARQL_UPDATE @linked_data/import_deputati.sparql_update
SD_SPARQL_UPDATE @linked_data/import_senatori.sparql_update


####################################################
SD_LOG  "Starting reasoning window... "
####################################################
SD_SPARQL_UPDATE @axioms/005_agcom_cleancing.sparql_update
SD_SPARQL_UPDATE @axioms/010_skos-axioms.sparql_update
SD_SPARQL_UPDATE @axioms/020_discover_links.sparql_update
SD_SPARQL_UPDATE @axioms/022_find_missing_pref_labels.sparql_update
SD_SPARQL_UPDATE @axioms/023_find_missing_person_img.sparql_update
SD_SPARQL_UPDATE @axioms/024_compute_nst.sparql_update
SD_SPARQL_UPDATE @axioms/025_compute_bwi.sparql_update
SD_SPARQL_UPDATE @axioms/026_compute_tvi.sparql_update
SD_SPARQL_UPDATE @axioms/030_make_bubblegraph.sparql_update
SD_SPARQL_UPDATE @axioms/032_make_bubbles.sparql_update
SD_SPARQL_UPDATE @axioms/035_make_bubbles_history.sparql_update
SD_SPARQL_UPDATE @axioms/036_make_bubbles_previous_value.sparql_update
SD_SPARQL_UPDATE @axioms/040_make_bubblegraph_partitions.sparql_update


####################################################
SD_LOG  "Testing..."
####################################################
for testFile in $(ls -v tests/*ask); do
    echo -n "   $(basename $testFile)..."
    case "$(SD_SPARQL_QUERY xml @$testFile)" in
        *true* ) echo "OK";;
        *false* ) echo "FAIL";;
    esac
done


SD_THATS_ALL_FOLKS